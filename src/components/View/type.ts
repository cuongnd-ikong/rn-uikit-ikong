import type { ViewProps as RNViewProps, ViewStyle } from 'react-native';

export type ViewProps = RNViewProps & {
  centerAll?: boolean /* alignItem and justify = center */;
  center?: boolean /* alignItem = center */;
  row?: boolean /* flexDirection = row */;
  bgColor?: string | any /* set bg color */;
  flex1?: boolean /* set flex = 1 */;
  flex?: number /* set flex */;
  width?: number | string /* set width */;
  fullWidth?: boolean /* set width = 100% */;
  height?: number | string /* set height */;
  fullHeight?: boolean /* set height = 100% */;
  spaceBetween?: boolean /* set justify Content = space between */;
  spaceAround?: boolean /* set justify Content = space around */;
  shadow?: boolean /* enable shadow */;
  children?: React.ReactNode /* children */;
  reAnimated?: boolean /* return a ReAnimated View */;
  reAnimatedStyle?: ViewStyle /* return a ReAnimated View */;
  flexEnd?: boolean /* set justify Content = flex end */;
  borderColor?: string | any;
  style?: ViewStyle;
  borderTopLeftRadius?: number;
  borderTopRightRadius?: number;
  borderBottomLeftRadius?: number;
  borderBottomRightRadius?: number;
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
  padding?: number;
  paddingHorizontal?: number;
  paddingVertical?: number;
  paddingLeft?: number;
  paddingRight?: number;
  borderRadius?: number;
  marginTop?: number;
  marginHorizontal?: number;
  zIndex?: number;
  paddingTop?: number;
  paddingBottom?: number;
  borderWidth?: number;
  borderBottomWidth?: number;
  borderTopWidth?: number;
  borderStyle?: ViewStyle;
  marginBottom?: number;
  justifyCenter?: boolean;
  marginLeft?: number;
  marginRight?: number;
  marginVertical?: number;
};
